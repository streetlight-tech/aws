AWSTemplateFormatVersion: '2010-09-09'
Description: Resources for serverless app deployment

Parameters:
  Environment:
    Type: String
    Default: prod
    Description: Environment identifier
  Identifier:
    Type: String
    Default: Streetlight
    Description: "Identifier for resources (ex: ${Identifier}AppDeploymentPolicy)"
  IdentifierLower:
    Type: String
    Default: streetlight
    Description: "Lowercase identifier for resources (ex: ${IdentifierLower}-bucket)"

Resources:
  AppDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${Identifier}AppDeploymentRole'
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Application
          Value: !Ref Identifier
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: !Sub '${Identifier}AppDeploymentPolicy'
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'apigateway:POST'
                Resource: 
                  - !Sub 'arn:aws:apigateway:${AWS::Region}::/restapis'
              - Effect: Allow
                Action:
                  - 'apigateway:DELETE'
                  - 'apigateway:GET'
                  - 'apigateway:PATCH'
                  - 'apigateway:POST'
                  - 'apigateway:PUT'
                Resource: 
                  - !Sub 'arn:aws:apigateway:${AWS::Region}::/restapis/*'
              - Effect: Allow
                Action: 'cloudformation:CreateChangeSet'
                Resource: 
                  - !Sub 'arn:aws:cloudformation:${AWS::Region}:aws:stack/*'
                  - !Sub 'arn:aws:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31'
              - Effect: Allow
                Action:
                  -  'iam:*'
                Resource:
                  - !Sub 'arn:aws:iam::${AWS::AccountId}:role/*'
              - Effect: Allow
                Action:
                  -  'lambda:*'
                Resource:
                  - !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:*'
              - Effect: Allow
                Action:
                  - 's3:DeleteObject'
                  - 's3:GetObject*'
                  - 's3:PutObject*'
                  - 's3:GetBucket*'
                  - 's3:List*'
                Resource:
                    - !Sub 'arn:aws:s3:::${IdentifierLower}-pipeline-artifacts-${AWS::AccountId}/*'
                    - !Sub 'arn:aws:s3:::${IdentifierLower}-pipeline-artifacts-${AWS::AccountId}'

  ArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Sub '${IdentifierLower}-pipeline-artifacts-${AWS::AccountId}'
      PolicyDocument:
        Statement:
          - Effect: "Deny"
            Action: "s3:*"
            Principal: "*"
            Resource:
              - !Sub 'arn:aws:s3:::${IdentifierLower}-pipeline-artifacts-${AWS::AccountId}/*'
              - !Sub 'arn:aws:s3:::${IdentifierLower}-pipeline-artifacts-${AWS::AccountId}'
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: "Allow"
            Action:
              - 's3:GetObject*'
              - 's3:PutObject*'
              - 's3:DeleteObject*'
              - 's3:GetBucket*'
              - 's3:List*'
            Resource:
              - !Sub 'arn:aws:s3:::${IdentifierLower}-pipeline-artifacts-${AWS::AccountId}/*'
              - !Sub 'arn:aws:s3:::${IdentifierLower}-pipeline-artifacts-${AWS::AccountId}'
            Principal:
              AWS:
                - !GetAtt AppDeploymentRole.Arn

Outputs:
  AppDeploymentRole:
    Description: ARN of the IAM Role AppDeploymentRole
    Value: !GetAtt AppDeploymentRole.Arn
